// 1 - –°—Ç–≤–æ—Ä–∏—Ç–∏ –≥–µ—Ä–æ—è
// 2 - –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø —ñ–∑ –µ—Ñ–µ–∫—Ç–∞–º–∏
// 3 - –ª—ñ—á—ñ–ª—å–Ω–∏–∫ —Ö–æ–¥—ñ–≤

const Hero = {
    // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–¥–æ—Ä–æ–≤—è
    health: 10,
    maxHealth: 110,

    // –í—ñ–ª–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–¥–æ—Ä–æ–≤—è –∑–∞ —Ö—ñ–¥
    healthRepair: 13,
    mana: 10,
    maxMana: 125,
    manaRepair: 7,
    energy: 10,
    maxEnergy: 100,
    energyRepair: 15,
    characteristics: {
        power: 47,
        protection: 34,
        attack: 44,
        powerOfMagic: 47,
        luck: 3,
    },

    regeneration() {
        // –§—É–Ω–∫—Ü—ñ—è –∫–æ—Ç—Ä–∞ –¥–æ–ø–æ–≤–Ω—é—î —à–∫–∞–ª—É –∑–¥–æ—Ä–æ–≤—è, –º–∞—Ç–∏, –µ–Ω–µ—Ä–≥—ñ—ó(–≤–∏—Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ) –Ω–∞ –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–µ –ø—Ä–æ–ø–∏—Å–∞–Ω–µ —É –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω—ñ (healthRepair,
        //     manaRepair —Ç–∞ energyRepair). –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—ñ—Ü—ñ—ó –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ —Ö–æ–¥—É

        this.health + this.healthRepair <= this.maxHealth ? this.health += this.healthRepair : this.health = this.maxHealth;
        console.log("üöÄ ~ file: efects.js:15 ~ regeneration ~ this.health", this.health)

        this.mana + this.manaRepair <= this.maxMana ? this.mana += this.manaRepair : this.mana = this.maxMana;
        console.log("üöÄ ~ file: efects.js:18 ~ regeneration ~ this.mana", this.mana)

        this.energy + this.energyRepair <= this.maxEnergy ? this.energy += this.energyRepair : this.energy = this.maxEnergy;
        console.log("üöÄ ~ file: efects.js:21 ~ regeneration ~ this.energy", this.energy)

    },
}

// –õ—ñ—á—ñ–ª—å–Ω–∏–∫ —Ö–æ–¥—ñ–≤, –ª–µ–∂–∏—Ç—å —É –≥–ª–æ–±–∞–ª—å–Ω—ñ–π –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ, –∞–¥–∂–µ –¥–æ –π–æ–≥–æ –±—É–¥—É—Ç—å –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å –±–µ–∑–ª—ñ—á —Ñ—É–Ω–∫—Ü—ñ–π
let course = 5;

// –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ö–æ–¥—É
const nextCourse = document.querySelector('.efects-button-move').addEventListener('click', () => {
    console.log(course);
    course += 1;
    Hero.regeneration();
});


// –ö–ª–∞—Å –∫–æ—Ç—Ä–∏–π –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ –µ—Ñ–µ–∫—Ç–∏ –≤—ñ–¥ –∑–∞–∫–ª—è—Ç—å, –ø–æ—Ä–∞–Ω–µ–Ω—å, —Å—Ç–∞–Ω—ñ–≤ —ñ —Ç–ø
class Use {
    constructor({ rootSelector, nCourse = 0, value1 = 0, value2 = 0, mana = 0, damage = 0, baff = 0, deBaff = 0, name1 = undefined, name2 = undefined }) {
        // const { rootSelector, nCourse = 0, value1 = 0, value2 = 0, mana = 0, damage = 0, baff = 0, deBaff = 0, name1 = undefined, name2 = undefined } = bace;
        this.rootSelector = rootSelector;
        this.nCourse = nCourse;
        this.value1 = value1;
        this.value2 = value2;
        this.mana = mana;
        this.damage = damage;
        this.baff = baff;
        this.deBaff = deBaff;
        this.name1 = name1;
        this.name2 = name2;

        this.useEfect();
        this.getRefs(rootSelector);
    }

    getRefs(rootSelector) {
        document.querySelector(rootSelector)
            .addEventListener('click', () => {
                this.nCourse += course;
                this.useEfect();
            });

    }

    useEfect() {
        if (this.nCourse >= course) {

            console.log(`—Ü–µ –ø—Ä–∞—Ü—é—î {this.bace}`)
            //     Hero.[this.name1] += this.value1;
            //     if (this.name2 !== undefined) {
            //         Hero.[this.name2] += this.value2;
            //     }
        }
    }
}

const efectOne = new Use({
    rootSelector: '.efects-button-1',
    name1: 'health',
    value1: 50,
})

console.log(efectOne);